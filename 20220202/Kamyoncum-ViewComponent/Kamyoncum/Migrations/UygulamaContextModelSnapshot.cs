// <auto-generated />
using Kamyoncum.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kamyoncum.Migrations
{
    [DbContext(typeof(UygulamaContext))]
    partial class UygulamaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kamyoncum.Models.Soz", b =>
                {
                    b.Property<int>("Kod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Kod");

                    b.ToTable("Sozler");

                    b.HasData(
                        new
                        {
                            Kod = 1,
                            Icerik = "Ölüme gidelim dedin de mazot mu yok dedik…"
                        },
                        new
                        {
                            Kod = 2,
                            Icerik = "İleride güzel günler göreceğiz demişlerdi. Daha ne kadar gideceğiz?"
                        },
                        new
                        {
                            Kod = 3,
                            Icerik = "Adımı avucuna yaz. Beni hatırladıkça avucunu yalarsın."
                        },
                        new
                        {
                            Kod = 4,
                            Icerik = "Arkadaşın çok olur ama zor gününde yok olur!"
                        },
                        new
                        {
                            Kod = 5,
                            Icerik = "Otopsi istiyorum! Hayallerim kendi eceliyle ölmüş olamaz."
                        },
                        new
                        {
                            Kod = 6,
                            Icerik = "Mevzu atlı karıncalar değil. Dönen dolaplar!"
                        },
                        new
                        {
                            Kod = 7,
                            Icerik = "Gönlünde yer yoksa güzelim, Fark etmez ben ayakta da giderim."
                        },
                        new
                        {
                            Kod = 8,
                            Icerik = "Kalp dediğin atıyor zaten. Marifet ritmi değiştirmekte."
                        },
                        new
                        {
                            Kod = 9,
                            Icerik = "Her şeyi bilmene gerek yok. Haddini bil yeter."
                        },
                        new
                        {
                            Kod = 10,
                            Icerik = "Ahlarla kaybettiğini keşkelerle arayacaksın…!"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
